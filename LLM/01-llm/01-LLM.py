#TASK 1.
#----------------------------------------------------------------------------------------------------------
from transformers import AutoTokenizer

tokenizer = AutoTokenizer.from_pretrained("bert-base-uncased")
text = "Transformers are amazing!"
tokens = tokenizer.tokenize(text)
token_ids = tokenizer.convert_tokens_to_ids(tokens)

print("Tokens:", tokens)
print("Token IDs:", token_ids)

# 4 tane token var. Model anlayabileceÄŸi ÅŸekilde 4 tane kÃ¼Ã§Ã¼k metin parÃ§asÄ± seÃ§miÅŸ
# SeÃ§ilen kÃ¼Ã§Ã¼k metin parÃ§alarÄ±na (tokenlara) karÅŸÄ±lÄ±k gelen sayÄ±sal deÄŸerler tokenids olarak adlandÄ±rÄ±lÄ±yor.

#------------------------------------------------------------------------------------------------------------

#TASK 2.
from transformers import pipeline

classifier = pipeline("sentiment-analysis")
print(classifier("I love using transformers!"))
#[{'label': 'POSITIVE', 'score': 0.9994327425956726}]
print(classifier("I will be a good coder in the future!"))
#[{'label': 'POSITIVE', 'score': 0.9998165965080261}]
print(classifier("I hate using ai!"))
#[{'label': 'NEGATIVE', 'score': 0.9970158338546753}]

#Ã§ok yakÄ±n bir ÅŸekilde doÄŸru sonuÃ§lar veriyor.

#------------------------------------------------------------------------------------------------------------
#TASK 3.

from transformers import pipeline

generator = pipeline("text-generation", model="gpt2")
result = generator("After understanding the logic very well about LLM", max_length=30, temperature=0.9)
print(result[0]['generated_text'])
print("------------------------------------------------------------------------------------------------------------")
result = generator("when Ä± wake up", max_length=30, temperature=0.3)
print(result[0]['generated_text'])
print("------------------------------------------------------------------------------------------------------------")
result = generator("I want coffee but I drank too much caffeine", max_length=30, temperature=0.7)
print(result[0]['generated_text'])
print("------------------------------------------------------------------------------------------------------------")

# AynÄ± ayarlarda 3 farklÄ± baÅŸlangÄ±Ã§ cÃ¼mlesi ile denendi. Her seferinde farklÄ± sonuÃ§lar veriyor.Anlamlar bazen karÄ±ÅŸÄ±k olabiliyor.
#Ã–nce hepsi 0.7 ile denendi. Sonra 0.3 ile denendi. 0.3 ile denendiÄŸinde neredeyse tek kelime Ã¼retti.
#0.9 ile denendiÄŸinde ise daha fazla kelime Ã¼retti. 0.9 ile denendiÄŸinde daha fazla kelime Ã¼rettiÄŸi iÃ§in daha aÃ§Ä±klanÄ±r bir sonuÃ§ verdi.
#0.3 ile denendiÄŸinde ise daha az kelime Ã¼rettiÄŸi iÃ§in anlamÄ± daha net fakat hikayesiz tekrarlamalar oldu.

#------------------------------------------------------------------------------------------------------------
#TASK 4.   
import os
from openai import OpenAI
from dotenv import load_dotenv

# .env dosyasÄ±ndaki API anahtarÄ±nÄ± yÃ¼kle
load_dotenv()
client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

# Prompt cÃ¼mlesi
prompt = "Bir sabah uyandÄ±ÄŸÄ±nda her ÅŸey deÄŸiÅŸmiÅŸti Ã§Ã¼nkÃ¼ artÄ±k kimse konuÅŸmuyor, herkes sadece bakÄ±ÅŸlarla iletiÅŸim kuruyordu."

# API Ã¼zerinden cevap oluÅŸtur
response = client.chat.completions.create(
    model="gpt-3.5-turbo",  
    messages=[
        {"role": "system", "content": "Sen yaratÄ±cÄ± bir hikaye anlatÄ±cÄ±sÄ±sÄ±n."},
        {"role": "user", "content": prompt}
    ],
    temperature=0.7,
    max_tokens=256,
)

# CevabÄ± yazdÄ±r
print("ğŸš€ Tamamlanan Metin:\n")
print(response.choices[0].message.content)

#GenÃ§ bir kadÄ±n olan Elif, sabah uyandÄ±ÄŸÄ±nda alÄ±ÅŸÄ±k olmadÄ±ÄŸÄ± bir sessizlikle karÅŸÄ±laÅŸtÄ±. Sokakta yÃ¼rÃ¼rken fark etti ki
#insanlar birbirleriyle konuÅŸmuyor, sadece gÃ¶z temasÄ± kurarak iletiÅŸim kuruyorlardÄ±. Bu durum Elif'i oldukÃ§a endiÅŸelendirdi
#ve etrafÄ±ndaki insanlarÄ± izlemeye baÅŸladÄ±.BirkaÃ§ gÃ¼n boyunca bu sessizlik devam etti. Elif, insanlarÄ±n gÃ¶zlerinde farklÄ± 
#duygularÄ± ve mesajlarÄ± gÃ¶rmeye baÅŸladÄ±. Kimi insanlar endiÅŸeliydi, kimi mutluydu, kimi ise korkmuÅŸtu. GÃ¶zlerin ifade ettiÄŸi 
#duygular, insanlarÄ±n iÃ§ dÃ¼nyalarÄ±nÄ± daha derinlemesine keÅŸfetmesine olanak saÄŸlÄ±yordu.Elif, bu yeni iletiÅŸim ÅŸekline alÄ±ÅŸmaya
#baÅŸladÄ±kÃ§a, insanlarÄ±n birbirlerine nasÄ±l daha anlayÄ±ÅŸlÄ± ve duyarlÄ± olabileceÄŸ

#SonuÃ§ beni Ã§ok ÅŸaÅŸÄ±rmadÄ± Ã§Ã¼nkÃ¼ OpenAI'nin modelleri genellikle yaratÄ±cÄ± ve anlamlÄ± metinler Ã¼retebiliyor.Kelimeleri sÄ±nÄ±rladÄ±ÄŸÄ±m
#iÃ§in daha kÄ±sa bir metin Ã¼retti. EÄŸer kelime sÄ±nÄ±rÄ±nÄ± artÄ±rmÄ±ÅŸ olsaydÄ±m daha uzun ve detaylÄ± bir hikaye yazabilirdi belki o zaman
#daha da ÅŸaÅŸÄ±rabilirdim.